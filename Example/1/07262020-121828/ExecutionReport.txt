#####  Based on Valgrind output:  #####

Conditional jump or move depends on uninitialised value(s)
at 0x48E2E40: __vfprintf_internal (vfprintf-internal.c:1644)
by 0x48CD8D7: printf (printf.c:33)
by 0x109172: main (1.c:7)
Uninitialised value was created by a stack allocation
at 0x109155: main (1.c:5)

#####  Koronka made following changes in 1.c  #####

Changed 7. line 
	int  x;
 with 
	int  x= 0;


#####  Based on Valgrind output:  #####

Conditional jump or move depends on uninitialised value(s)
at 0x48E2E40: __vfprintf_internal (vfprintf-internal.c:1644)
by 0x48CD8D7: printf (printf.c:33)
by 0x1091C3: main (1.c:15)
Uninitialised value was created by a heap allocation
at 0x483874F: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
by 0x109183: main (1.c:9)

#####  Koronka made following changes in 1.c  #####

Changed 9. line 
	int *t = malloc ( sizeof( int )*4) ;
 with 
	int *t = malloc ( sizeof( int )*4) ;
	int __index__;
	for( __index__ = 0; __index__ < 4; __index__  ++)
		t[__index__] = 0;


#####  Based on Valgrind output:  #####

Conditional jump or move depends on uninitialised value(s)
at 0x48C8240: __printf_fp_l (printf_fp.c:387)
by 0x48E291F: __vfprintf_internal (vfprintf-internal.c:1644)
by 0x48CD8D7: printf (printf.c:33)
by 0x109258: main (1.c:25)
Uninitialised value was created by a heap allocation
at 0x483874F: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
by 0x1091BE: main (1.c:13)

#####  Koronka made following changes in 1.c  #####

Changed 13. line 
	float *u = malloc ( sizeof(float)*4) ;
 with 
	float *u = malloc ( sizeof(float)*4) ;
	for( __index__ = 0; __index__ < 4; __index__  ++)
		u[__index__] = 0;


